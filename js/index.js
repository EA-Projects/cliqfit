window.addEventListener("load",(function(){if($(window).scroll((function(){$(window).scrollTop()>=1?$("nav").addClass("scrolled"):$("nav").removeClass("scrolled")})),$(".slide-mobile").slick({slidesToShow:1,slidesToScroll:1,centerMode:!0,centerPadding:"20px",focusOnSelect:!1,arrows:!1,autoplay:!1,pauseOnHover:!1,draggable:!0,infinite:!1,dots:!0}),$("[data-fade]").length){let e=new Set,t=new IntersectionObserver((a=>{const o=a.filter((t=>t.isIntersecting&&!e.has(t.target))).map((e=>e.target));o.length>0&&(gsap.to(o,{opacity:1,y:0,stagger:.15,ease:"power2.out",duration:.5,delay:.3}),o.forEach((a=>{e.add(a),t.unobserve(a)})))}),{threshold:.3});document.querySelectorAll("[data-fade]").forEach((e=>{t.observe(e)}))}if($("[data-scale]").length){let e=new Set,t=new IntersectionObserver((a=>{const o=a.filter((t=>t.isIntersecting&&!e.has(t.target))).map((e=>e.target));o.length>0&&(gsap.to(o,{opacity:1,scale:1,stagger:.1,ease:"back.out(1.7)",duration:.3,delay:.3}),o.forEach((a=>{e.add(a),t.unobserve(a)})))}),{threshold:.3});document.querySelectorAll("[data-scale]").forEach((e=>{t.observe(e)}))}}));